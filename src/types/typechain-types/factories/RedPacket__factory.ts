/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { ContractDeployTransaction, ContractRunner, Signer } from 'ethers'
import {
  Contract,
  ContractFactory,
  type ContractTransactionResponse,
  Interface,
} from 'ethers'
import type { NonPayableOverrides } from '../common'
import type { RedPacket, RedPacketInterface } from '../RedPacket'

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'packetId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'claimer',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'RedPacketClaimed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'packetId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'creator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'totalAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'packetCount',
        type: 'uint256',
      },
    ],
    name: 'RedPacketCreated',
    type: 'event',
  },
  {
    inputs: [],
    name: 'nextPacketId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'redPackets',
    outputs: [
      {
        internalType: 'address',
        name: 'creator',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'totalAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'remainingAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'remainingPackets',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'createdAt',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'packetCount',
        type: 'uint256',
      },
    ],
    name: 'createRedPacket',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
    payable: true,
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'packetId',
        type: 'uint256',
      },
    ],
    name: 'claimRedPacket',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'packetId',
        type: 'uint256',
      },
    ],
    name: 'getRedPacketInfo',
    outputs: [
      {
        internalType: 'address',
        name: 'creator',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'totalAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'remainingAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'remainingPackets',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'createdAt',
        type: 'uint256',
      },
      {
        internalType: 'address[]',
        name: 'claimers',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'packetId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'hasClaimedRedPacket',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'packetId',
        type: 'uint256',
      },
    ],
    name: 'getRedPacketAmounts',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b50611685806100206000396000f3fe60806040526004361061008d576000357c01000000000000000000000000000000000000000000000000000000009004806373da60711161006b57806373da6071146101275780637ea9993d146101645780638b11470a146101a15780638d4b67a6146101e35761008d565b8063128aa254146100925780636656432e146100d35780636917d78c146100fc575b600080fd5b34801561009e57600080fd5b506100b960048036038101906100b49190610c46565b610213565b6040516100ca959493929190610cc3565b60405180910390f35b3480156100df57600080fd5b506100fa60048036038101906100f59190610c46565b610269565b005b34801561010857600080fd5b506101116105fe565b60405161011e9190610d16565b60405180910390f35b34801561013357600080fd5b5061014e60048036038101906101499190610c46565b610604565b60405161015b9190610def565b60405180910390f35b34801561017057600080fd5b5061018b60048036038101906101869190610e3d565b610671565b6040516101989190610e98565b60405180910390f35b3480156101ad57600080fd5b506101c860048036038101906101c39190610c46565b6106db565b6040516101da96959493929190610f71565b60405180910390f35b6101fd60048036038101906101f89190610c46565b6107d6565b60405161020a9190610d16565b60405180910390f35b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154905085565b6000806000838152602001908152602001600020905060008160010154116102c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bd90611036565b60405180910390fd5b600081600301541161030d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610304906110a2565b60405180910390fd5b8060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561039c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103939061110e565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361042e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104259061117a565b60405180910390fd5b60018160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000816003015482600601805490506104a191906111c9565b905060008260060182815481106104bb576104ba6111fd565b5b90600052602060002001549050808360020160008282546104dc91906111c9565b925050819055508260030160008154809291906104f89061122c565b919050555082600701339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105a8573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff16847f35d644614009c0a33ec77a511c3b74a5eb804fc664529a6c778562dd6b87fade836040516105f09190610d16565b60405180910390a350505050565b60015481565b606060008083815260200190815260200160002060060180548060200260200160405190810160405280929190818152602001828054801561066557602002820191906000526020600020905b815481526020019060010190808311610651575b50505050509050919050565b600080600084815260200190815260200160002060050160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008060008060006060600080600089815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001015482600201548360030154846004015485600701808054806020026020016040519081016040528092919081815260200182805480156107b957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161076f575b505050505090509650965096509650965096505091939550919395565b600080341161081a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610811906112a1565b60405180910390fd5b6000821161085d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085490611333565b60405180910390fd5b60648211156108a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610898906113c5565b60405180910390fd5b6000600160008154809291906108b6906113e5565b91905055905060008060008381526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034816001018190555034816002018190555083816003018190555042816004018190555061094334856109b6565b81600601908051906020019061095a929190610ba1565b503373ffffffffffffffffffffffffffffffffffffffff16827f680e257dda79cd07165570434d5cd2ff8221d3f4d092abfc2a09a555440e93ee34876040516109a492919061142d565b60405180910390a38192505050919050565b606060008267ffffffffffffffff8111156109d4576109d3611456565b5b604051908082528060200260200182016040528015610a025781602001602082028036833780820191505090505b509050600084905060005b600185610a1a91906111c9565b811015610b115760008186610a2f91906111c9565b600284610a3c9190611485565b610a4691906114f6565b9050600060019050600081610a7160018486610a6291906111c9565b610a6c9190611527565b610b49565b610a7b9190611527565b905060018489610a8b91906111c9565b610a9591906111c9565b85610aa091906111c9565b811115610acd5760018489610ab591906111c9565b610abf91906111c9565b85610aca91906111c9565b90505b80868581518110610ae157610ae06111fd565b5b6020026020010181815250508085610af991906111c9565b94505050508080610b09906113e5565b915050610a0d565b508082600186610b2191906111c9565b81518110610b3257610b316111fd565b5b602002602001018181525050819250505092915050565b6000808203610b5b5760009050610b9c565b81424433600154604051602001610b7594939291906115d0565b6040516020818303038152906040528051906020012060019004610b99919061161e565b90505b919050565b828054828255906000526020600020908101928215610bdd579160200282015b82811115610bdc578251825591602001919060010190610bc1565b5b509050610bea9190610bee565b5090565b5b80821115610c07576000816000905550600101610bef565b5090565b600080fd5b6000819050919050565b610c2381610c10565b8114610c2e57600080fd5b50565b600081359050610c4081610c1a565b92915050565b600060208284031215610c5c57610c5b610c0b565b5b6000610c6a84828501610c31565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c9e82610c73565b9050919050565b610cae81610c93565b82525050565b610cbd81610c10565b82525050565b600060a082019050610cd86000830188610ca5565b610ce56020830187610cb4565b610cf26040830186610cb4565b610cff6060830185610cb4565b610d0c6080830184610cb4565b9695505050505050565b6000602082019050610d2b6000830184610cb4565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610d6681610c10565b82525050565b6000610d788383610d5d565b60208301905092915050565b6000602082019050919050565b6000610d9c82610d31565b610da68185610d3c565b9350610db183610d4d565b8060005b83811015610de2578151610dc98882610d6c565b9750610dd483610d84565b925050600181019050610db5565b5085935050505092915050565b60006020820190508181036000830152610e098184610d91565b905092915050565b610e1a81610c93565b8114610e2557600080fd5b50565b600081359050610e3781610e11565b92915050565b60008060408385031215610e5457610e53610c0b565b5b6000610e6285828601610c31565b9250506020610e7385828601610e28565b9150509250929050565b60008115159050919050565b610e9281610e7d565b82525050565b6000602082019050610ead6000830184610e89565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610ee881610c93565b82525050565b6000610efa8383610edf565b60208301905092915050565b6000602082019050919050565b6000610f1e82610eb3565b610f288185610ebe565b9350610f3383610ecf565b8060005b83811015610f64578151610f4b8882610eee565b9750610f5683610f06565b925050600181019050610f37565b5085935050505092915050565b600060c082019050610f866000830189610ca5565b610f936020830188610cb4565b610fa06040830187610cb4565b610fad6060830186610cb4565b610fba6080830185610cb4565b81810360a0830152610fcc8184610f13565b9050979650505050505050565b600082825260208201905092915050565b7f526564207061636b657420646f6573206e6f7420657869737400000000000000600082015250565b6000611020601983610fd9565b915061102b82610fea565b602082019050919050565b6000602082019050818103600083015261104f81611013565b9050919050565b7f4e6f207061636b6574732072656d61696e696e67000000000000000000000000600082015250565b600061108c601483610fd9565b915061109782611056565b602082019050919050565b600060208201905081810360008301526110bb8161107f565b9050919050565b7f416c726561647920636c61696d65640000000000000000000000000000000000600082015250565b60006110f8600f83610fd9565b9150611103826110c2565b602082019050919050565b60006020820190508181036000830152611127816110eb565b9050919050565b7f43726561746f722063616e6e6f7420636c61696d206f776e207061636b657400600082015250565b6000611164601f83610fd9565b915061116f8261112e565b602082019050919050565b6000602082019050818103600083015261119381611157565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111d482610c10565b91506111df83610c10565b92508282039050818111156111f7576111f661119a565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061123782610c10565b91506000820361124a5761124961119a565b5b600182039050919050565b7f4d7573742073656e642045544800000000000000000000000000000000000000600082015250565b600061128b600d83610fd9565b915061129682611255565b602082019050919050565b600060208201905081810360008301526112ba8161127e565b9050919050565b7f5061636b657420636f756e74206d75737420626520677265617465722074686160008201527f6e20300000000000000000000000000000000000000000000000000000000000602082015250565b600061131d602383610fd9565b9150611328826112c1565b604082019050919050565b6000602082019050818103600083015261134c81611310565b9050919050565b7f5061636b657420636f756e74206d757374206265206c657373207468616e206f60008201527f7220657175616c20746f20313030000000000000000000000000000000000000602082015250565b60006113af602e83610fd9565b91506113ba82611353565b604082019050919050565b600060208201905081810360008301526113de816113a2565b9050919050565b60006113f082610c10565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114225761142161119a565b5b600182019050919050565b60006040820190506114426000830185610cb4565b61144f6020830184610cb4565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061149082610c10565b915061149b83610c10565b92508282026114a981610c10565b915082820484148315176114c0576114bf61119a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061150182610c10565b915061150c83610c10565b92508261151c5761151b6114c7565b5b828204905092915050565b600061153282610c10565b915061153d83610c10565b92508282019050808211156115555761155461119a565b5b92915050565b6000819050919050565b61157661157182610c10565b61155b565b82525050565b60006c0100000000000000000000000082029050919050565b60006115a08261157c565b9050919050565b60006115b282611595565b9050919050565b6115ca6115c582610c93565b6115a7565b82525050565b60006115dc8287611565565b6020820191506115ec8286611565565b6020820191506115fc82856115b9565b60148201915061160c8284611565565b60208201915081905095945050505050565b600061162982610c10565b915061163483610c10565b925082611644576116436114c7565b5b82820690509291505056fea2646970667358221220f49e90319d6f65f81c9613a82b9d9d8d217a2cd3298325d8b39ec7292632d7a564736f6c63430008150033'

type RedPacketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: RedPacketConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class RedPacket__factory extends ContractFactory {
  constructor(...args: RedPacketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {})
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RedPacket & {
        deploymentTransaction(): ContractTransactionResponse
      }
    >
  }
  override connect(runner: ContractRunner | null): RedPacket__factory {
    return super.connect(runner) as RedPacket__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): RedPacketInterface {
    return new Interface(_abi) as RedPacketInterface
  }
  static connect(address: string, runner?: ContractRunner | null): RedPacket {
    return new Contract(address, _abi, runner) as unknown as RedPacket
  }
}
